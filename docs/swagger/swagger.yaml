basePath: '{{.BasePath}}'
definitions:
  models.Base:
    properties:
      error:
        type: string
      success:
        type: boolean
    type: object
  models.Secret:
    properties:
      createdAt:
        type: string
      expiresAt:
        type: string
      id:
        type: string
      maxViews:
        type: integer
      remainingViews:
        type: string
      secretText:
        type: string
    type: object
host: '{{.Host}}'
info:
  contact: {}
  description: '{{.Description}}'
  license: {}
  title: '{{.Title}}'
  version: '{{.Version}}'
paths:
  /:
    get:
      description: Welcome will return the welcome message as response with status
        code as 200
      produces:
      - application/json
      - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Base'
            type: object
      summary: Welcome
      tags:
      - System status
  /ping:
    get:
      description: Ping test, return the commit ID and container ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Base'
            type: object
      summary: Ping test
      tags:
      - System status
  /secret:
    post:
      description: Add a new secret
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Secret'
            type: object
      summary: Add a new secret
      tags:
      - secret
  /status:
    get:
      description: Status will provide the status of the service we been used in the
        application
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Base'
            type: object
      summary: Get Status
      tags:
      - System status
swagger: "2.0"
